// pruned
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  email          String      @unique(map: "users_email_unique") @db.VarChar(255)
  password       String      @db.VarChar(255)
  rememberToken  String?     @db.VarChar(100) @map("remember_token")
  createdAt      DateTime?   @db.Timestamp(0) @map("created_at")
  updatedAt      DateTime?   @db.Timestamp(0) @map("updated_at")
  userBooks      BookUser[]
  notes          Note[]

  @@map("users")
}

model BookUser {
  userId     BigInt    @db.UnsignedBigInt @map("user_id")
  isbn       String    @db.VarChar(13) @map("ISBN")
  createdAt  DateTime? @db.Timestamp(0) @map("created_at")
  updatedAt  DateTime? @db.Timestamp(0) @map("updated_at")
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "book_user_user_id_foreign")

  @@id([isbn, userId])
  @@index([userId], map: "book_user_user_id_foreign")

  @@map("book_user")
}

model Note {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  userId     BigInt    @db.UnsignedBigInt @map("user_id")
  isbn       String    @db.VarChar(13) @map("ISBN")
  note       String    @db.VarChar(255)
  createdAt  DateTime? @db.Timestamp(0) @map("created_at")
  updatedAt  DateTime? @db.Timestamp(0) @map("updated_at")
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "notes_user_id_foreign")

  @@index([userId], map: "notes_user_id_foreign")

  @@map("notes")
}
